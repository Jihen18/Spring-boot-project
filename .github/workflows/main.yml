#va contenir les github actions // le pipeline

#Nom de pipeline
name: Build & Deploy Spring app
#when to trigger this pipeline
on:
  #Ici, le pipeline s'exécute automatiquement à chaque push de
  #code sur le dépôt Git.
  push:

#in which branches we want to define those actions
    branches:
      - main
#set of steps each job is whole process in seperate machine
jobs:

#  name of the job build-deploy
  build-deploy:
    name: Build and Deploy Spring boot for beginner
#    la machine sur laquelle ce job va être exectué
    runs-on: ubuntu-latest
    steps:
#        après l'exécution de cette étape, le code de votre dépôt Git sera cloné dans la machine
#virtuelle (ubuntu-latest) où le job s'exécute,
      - name: Checkout code
#        actions in github
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3

#        comme des parametres
        with:
          #Ce paramètre spécifie quelle distribution de JDK vous voulez installer
          distribution: 'corretto'
          java-version: 17
#Exécution des tests unitaires
      - name: Unit Tests
        #manual script
        run: mvn -B test --file pom.xml
#Compilation de l'application
      - name: Build the application
        #multiple commandes
        run: |
          mvn clean
          mvn -B package --file pom.xml
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-for-beginners:today
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-for-beginners:today




